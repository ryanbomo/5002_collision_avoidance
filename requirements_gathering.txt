Write up scenario as use case
         - achitecture
         - he needs to represent the chekc neighbor and collision avoidance

Separate out the components of the simulator and airplane

Each will have informatioin

Set up in 2D way for Oct 16.

Start implementing a collision avoidance in C++ the same way as
     - what components
     - what attributes
         - information about own aircraft
         - detected aircraft
     - what methods do you need?

lower goes lower, higher goes higher



Aircraft (Necessary Attributes, not exhaustive attributes)
    Known Values
     - Safe Distance

    Components
        Controls
         - Modify Roll/Pitch/Yaw
             - Yaw - Move nose left or right
                 - Controlled by rudder
             - Pitch - Raise Nose up or Down
                 - Controlled by elevators
             - Roll - lift one wing and lower another
                 - Angle difference from zero is called bank
                 - Ailerons control Roll, but rudders are a secondary control
         - Modify Thrust

        Sensors
         - Altitude
         - Spedomiter
         - Compass
         - Roll/Pitch/Yaw
         - Receiver - receives data sent from other aircraft
        Project
         - Broadcasts sensor data
             - Should encrypt and include components for validation

    Initial system will work like a recommendation system.  As we won't have full flight control implemented, simply getting the correct response output will work for phase 1.  Subsequent phases should include modules for incorporating necessary data to automate flight decisions without causing other hazards (sharp upward banks leading to stalls, wind patterns, air pressure issues, and stuff like that).

    Scenario A: No Other Aircraft Detected
        In scenario A, the detector system should not receive any data.  As a result, no recommendation should com from the recommendor system.

    Scenario B: 1 other Aircraft Detected - Collision Course
        In scenario B, the detector system should receive data from another aircrfat.  It should examine the received data and compare it to the Aircrafts own data.  It should detect a collision course, and as a result make a recommendation for avoidance.

    Scenario C: 1 other Aircraft Detected - No Collision Course
        In scenario C, the detector system should receive data from another aircraft.  It should examine the received data and compare it to its own data. It should see that there is no collision course, and as a result make no recommendation.
    
    